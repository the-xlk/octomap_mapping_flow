<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>

	<include file="$(find realsense2_camera)/launch/custom_tracking.launch"/>
	<include file="$(find mavros)/launch/px4.launch"/>
	<node pkg="octomap_server" type="odom_to_pose" name="odom_to_pose"/>
	<node pkg="octomap_server" type="rcOverride" name="rcOverride"/>

	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.2" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="odom" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="5.0" />
		
		<!-- data source to integrate (PointCloud2) -->
		<!--<remap from="cloud_in" to="/zedm/zed_node/point_cloud/cloud_registered" />-->

		<remap from="cloud_in" to="/output_cloud" />

		<param name="repScale" value="50.0" /><!-- 100 -->
  		<param name="velScale" value="500.0" />
  		<param name="lowThresh" value="1.0" />
  		<param name="highThresh" value="1.5" />
		<param name="velOffsetScale" value="20.0" />

	
	</node>
</launch>
